!-----------------------------------------------------------------------
!
!     user subroutines required by nek5000
!
!     Parameters used by this set of subroutines:
!
!-----------------------------------------------------------------------
      subroutine uservp (ix,iy,iz,ieg)
      include 'SIZE'
      include 'NEKUSE'          ! UDIFF, UTRANS

      UDIFF =0.0
      UTRANS=0.0

      return
      end
!-----------------------------------------------------------------------
      subroutine userf  (ix,iy,iz,ieg)
      
      include 'SIZE'
      include 'NEKUSE'          ! FF[XYZ]
      include 'PARALLEL'

      integer ix,iy,iz,ieg

      ffx = 0.0
      ffy = 0.0
      ffz = 0.0

      return
      end
!-----------------------------------------------------------------------
      subroutine userq  (ix,iy,iz,ieg)
      include 'SIZE'
      include 'NEKUSE'          ! QVOL

      QVOL   = 0.0

      return
      end
!-----------------------------------------------------------------------
      subroutine userchk
      implicit none
      include 'SIZE'            !
      include 'TSTEP'           ! ISTEP, lastep, time
      include 'INPUT'           ! IF3D, PARAM
      
!     start framework
      if (ISTEP.eq.0) call frame_start

!     monitor simulation
      call frame_monitor
!      call pstat2d_main

!     save/load files for full-restart
      call chkpt_main

!     for statistics
      call stat_avg

!     finalise framework
      if (ISTEP.eq.NSTEPS.or.LASTEP.eq.1) then
         call frame_end
      endif
     
      return
      end
!-----------------------------------------------------------------------
      subroutine userbc (ix,iy,iz,iside,eg)
      include 'SIZE'
      include 'NEKUSE'          ! UX, UY, UZ, TEMP, X, Y

!     velocity
!      ux =  0.0
!      uy =  0.0
!      uz =  0.0

      return
      end
!-----------------------------------------------------------------------
      subroutine useric (ix,iy,iz,ieg)
      include 'SIZE'
      include 'NEKUSE'          ! UX, UY, UZ, TEMP, Z

!     argument list
      integer ix,iy,iz,ieg

!     Initialization 
      real viscosity, Ubar, Ret, channelh, PI
      real utau, sig, dup, betab, alphap, eps   
      real deviation, dy, zp, yp, xp
      real expsig, expsig2, cosbeta, sinalpha
      real streamp, spanp
      
      PI=3.14159265359
      
      viscosity = 2e-5
      Ubar = 0.135
      Ret = 180 
      channelh = 1.0
      
      utau = Ret*viscosity/channelh
      sig = 0.00055
      
      dup = Ubar*0.25/utau;
      betap = 2.0*PI*(1.0/200.0);
      alphap = 2.0*PI*(1.0/500.0);
      eps = Ubar/100.0;      
      deviation = 1.0 + 0.2*rand();
      
      zp = z*Ret/channelh
      dy = MIN(y+1,2.0*channelh-(y+1))
      yp = dy*Ret/channelh
      xp = x*Ret/channelh 
      
      expsig=EXP(-sig*yp*yp+0.5)
      cosbeta=COS(betap*zp)
      streamper=(utau*dup/2.0)*(yp/40.0)*expsig*cosbeta*deviation
      
      expsig2=EXP(-sig*yp*yp)
      sinalpha=SIN(alphap*xp)
      spanper=eps*sinalpha*yp*expsig2*deviation
      
      ! bulk velocity + perturbation
      ux = 3.0*Ubar*(dy/channelh - 0.5*(dy/channelh)*(dy/channelh))
      ux = ux+streamper*25
      uz = spanper*25      
      uy = 0
            
!     temperature and scalars            
      temp = 0.0


      return
      end
!-----------------------------------------------------------------------
      subroutine usrdat
      include 'SIZE'

      integer,parameter :: seed = 42
      call srand(seed)

      return
      end
!-----------------------------------------------------------------------
       subroutine usrdat2
      include 'SIZE'
      include 'TOTAL'



      do iel=1,nelv
      do ifc=1,2*ndim
          id_face = bc(5,ifc,iel,1)
          if (id_face.eq.3) then
             cbc(ifc,iel,1) = 'W  '
          endif
      enddo
      enddo
      
      return
      end
!-----------------------------------------------------------------------
      subroutine usrdat3
      include 'SIZE'
      include 'INPUT'           ! param, if3d
      include 'MASS'            ! volvm1      
      
      param(54) = -1  ! use >0 for const flowrate or <0 bulk vel
                      ! flow direction is given by (1=x, 2=y, 3=z) 
      param(55) = 1.0 ! flowrate/bulk-velocity 

      return
      end
c-----------------------------------------------------------------------

